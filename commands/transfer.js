const { SlashCommandBuilder } = require('@discordjs/builders');
const { PermissionFlagsBits } = require('discord.js');

const userController = require('../controller/user.controller')

const isTimePassed = function (minutes, timestamp) {
    const conversion = minutes * 60 * 1000;
    const currentTime = Date.now();

    return (currentTime - timestamp) >= conversion;
}

module.exports = {
    data: new SlashCommandBuilder()
        .setName('transfer')
        .setDescription("–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
        .addUserOption(option =>
            option.setName('user')
                .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–µ—Ä–µ–≤–æ–¥')
                .setRequired(true))
        .addIntegerOption(option =>
            option.setName('amount')
                .setDescription('–°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞')
                .setRequired(true)),

    async execute(interaction) {
        const targetUser = interaction.options.getUser('user');
        const transferAmount = interaction.options.getInteger('amount');

        const discordId = targetUser.id;
        const userId = interaction.user.id;

        const user = await userController.findOneUser('person', userId);
        const receiver = await userController.findOneUser('person', discordId);

        if (!user) {
            return await interaction.reply({ content: `‚ùå –í–∞—à –º–∞–≥–∞–∑–∏–Ω –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /shop`, ephemeral: true });
        } else if (!receiver) {
            return await interaction.reply({ content: `‚ùå –ü–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –º–∞–≥–∞–∑–∏–Ω, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å /shop`, ephemeral: true });
        }

        if (user.balance - transferAmount < 0) {
            return await interaction.reply({ content: `‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.`, ephemeral: true });
        }

        const updateSender = await userController.updateUserParam(userId, 'balance', user.balance - transferAmount, 'person');
        const updateReceiver = await userController.updateUserParam(discordId, 'balance', receiver.balance + transferAmount, 'person');

        if (updateSender && updateReceiver) {
            await interaction.reply({ content: `üíµ –°—Ä–µ–¥—Å—Ç–≤–∞ [${transferAmount}] –±—ã–ª–∏ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUser.username}`, ephemeral: true });

            try {
                await targetUser.send(`üéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏ [${transferAmount}] —Å—Ä–µ–¥—Å—Ç–≤ –æ—Ç ${interaction.user.username}.`);
            } catch (error) {
                console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUser.username}. –í–æ–∑–º–æ–∂–Ω–æ, —É –Ω–µ–≥–æ –æ—Ç–∫–ª—é—á–µ–Ω—ã –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.`);
                await interaction.followUp({ content: `‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUser.username}. –í–æ–∑–º–æ–∂–Ω–æ, —É –Ω–µ–≥–æ –æ—Ç–∫–ª—é—á–µ–Ω—ã –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.`, ephemeral: true });
            }
        } else {
            await interaction.reply({ content: `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ —Å—Ä–µ–¥—Å—Ç–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.`, ephemeral: true });
        }
    }
};
